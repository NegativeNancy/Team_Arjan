# libraries and data
import matplotlib.pyplot as plt
import numpy as np
import pandas as pd

def plot_all():

    list50 = [7873.12584269663, 8088.644943820225, 8319.16404494382, 8080.044943820225, 8194.304494382022, 7950.185393258427, 7845.8258426966295, 8289.66404494382, 8006.185393258427, 8074.844943820225]
    list100 = [7890.62584269663, 8429.023595505618, 8390.323595505619, 8493.383146067416, 8232.504494382023, 8107.244943820225, 7990.885393258427, 8357.56404494382, 8397.223595505619, 8383.923595505617]
    list150 = [8385.623595505618, 8366.464044943821, 8205.504494382023, 8304.464044943821, 8329.76404494382, 8301.76404494382, 8314.464044943821, 8446.223595505619, 8510.483146067416, 8401.523595505618]
    list200 = [8390.523595505618, 8517.583146067416, 8514.783146067415, 8295.36404494382, 8318.16404494382, 8195.204494382022, 8393.623595505618, 8304.964044943821, 8311.56404494382, 8193.104494382023]
    list250 = [8403.223595505619, 8308.36404494382, 8197.504494382023, 8295.964044943821, 8554.583146067416, 8212.304494382022, 8299.36404494382, 8406.723595505619, 8422.123595505618, 8538.383146067416]
    list300 = [8307.86404494382, 8392.123595505618, 8292.66404494382, 8201.004494382023, 8411.923595505617, 8335.06404494382, 8511.683146067417, 8510.983146067416, 8288.26404494382, 8532.183146067417]
    list500 = [8506.783146067415, 8320.16404494382, 8504.083146067416, 8411.423595505617, 8393.223595505619, 8393.823595505619, 8426.823595505619, 8819.66179775281, 8390.823595505619, 8419.123595505618]
    list1000 = [8513.383146067416, 8724.602247191011, 8412.023595505618, 8491.383146067416, 8647.242696629213, 8453.423595505617, 8511.483146067416, 8535.483146067416, 8550.383146067416, 8501.183146067417]


    # Make a data frame
    df=pd.DataFrame({'x': range(1,11), '50': list50, '100': list100, '150': list150, '200': list200, '250': list250, '300': list300, '500': list500, '1000': list1000})

    # style
    plt.style.use('seaborn-darkgrid')

    # create a color palette
    palette = plt.get_cmap('Set1')

    # multiple line plot
    num=0
    for column in df.drop('x', axis=1):
        num+=1
        plt.plot(df['x'], df[column], marker='', color=palette(num), linewidth=1, alpha=0.9, label=column)

    # Add legend
    plt.legend(loc=2, ncol=2)

    # Add titles
    plt.title("Inital Scores", loc='left', fontsize=12, fontweight=0, color='orange')
    plt.xlabel("Times")
    plt.ylabel("Score")
    plt.show()

def plot_interval():

    list200 = [8390.523595505618, 8517.583146067416, 8514.783146067415, 8295.36404494382, 8318.16404494382, 8195.204494382022, 8393.623595505618, 8304.964044943821, 8311.56404494382, 8193.104494382023]
    list210 = [8066.044943820225, 8173.904494382023, 8143.544943820225, 7940.985393258427, 8313.26404494382, 8059.944943820225, 8090.444943820225, 8335.464044943821, 7968.385393258427, 8285.36404494382]
    list220 = [8155.404494382023, 8201.704494382022, 8096.244943820225, 8169.504494382023, 8350.86404494382, 8339.36404494382, 8101.444943820225, 8212.504494382023, 8197.204494382022, 8143.544943820225]
    list230 = [8188.804494382022, 8113.544943820225, 8518.883146067416, 7956.585393258427, 8069.544943820225, 8292.56404494382, 8296.464044943821, 8077.844943820225, 8004.985393258427, 8182.304494382022]
    list240 = [8192.004494382023, 8122.044943820225, 8018.785393258428, 8420.023595505618, 8081.944943820225, 8274.464044943821, 8215.504494382023, 8412.323595505619, 7987.785393258428, 7983.985393258427]
    list250 = [8403.223595505619, 8308.36404494382, 8197.504494382023, 8295.964044943821, 8554.583146067416, 8212.304494382022, 8299.36404494382, 8406.723595505619, 8422.123595505618, 8538.383146067416]

    # Make a data frame
    df=pd.DataFrame({'x': range(1,11), '200': list200, '210': list210, '220': list220, '230': list230, '240': list240, '250': list250})

    # style
    plt.style.use('seaborn-darkgrid')

    # create a color palette
    palette = plt.get_cmap('Set1')

    # multiple line plot
    num=0
    for column in df.drop('x', axis=1):
        num+=1
        plt.plot(df['x'], df[column], marker='', color=palette(num), linewidth=1, alpha=0.9, label=column)

    # Add legend
    plt.legend(loc=2, ncol=2)

    # Add titles
    plt.title("Closer interval inspection", loc='left', fontsize=12, fontweight=0, color='orange')
    plt.xlabel("Times")
    plt.ylabel("Score")
    plt.show()

def plot_mean():

    mean_dict = {
        "50": 8072.198988764045,
        "100": 8267.270224719101,
        "150": 8356.627865168539,
        "200": 8343.48786516854,
        "250": 8363.85382022472,
        "300": 8378.375730337078,
        "500": 8458.593370786515,
        "1000": 8534.059101123596
    }

    list200b = [8201.904494382023, 8304.16404494382, 8061.144943820225, 8271.464044943821, 8089.144943820225, 7870.8258426966295, 8514.083146067416, 8178.004494382023, 8000.185393258427, 8092.944943820225]
    mean200 = 8158.386629213484
    list250 = [8201.904494382023, 8304.16404494382, 8061.144943820225, 8271.464044943821, 8089.144943820225, 7870.8258426966295, 8514.083146067416, 8178.004494382023, 8000.185393258427, 8092.944943820225]
    mean250 = 8158.386629213484


    interval_mean_dict = {
        "200": 8158.386629213484,
        "210": 8137.734719101124,
        "220": 8196.778539325842,
        "230": 8170.152584269663,
        "240": 8170.88662921348,
        "250": 8158.386629213484

    }

    plt.plot(range(len(interval_mean_dict)), list(interval_mean_dict.values()))
    plt.xticks(range(len(interval_mean_dict)), list(interval_mean_dict.keys()))
    plt.xlabel("Population size")
    plt.ylabel("Scores")
    plt.title("Mean scores", loc='left', fontsize=12, fontweight=0)

    plt.show()

def plot_ignore_station_scores():

    base_list = [9364.0, 9391.1, 9337.3, 9369.8, 9362.6, 9394.4, 9367.5, 9392.2, 9357.3, 9388.0]
    base_mean = 9372.42
    uc_list = [9390.0, 9411.9, 9482.4, 9464.0, 9381.5, 9467.4, 9416.3, 9415.0, 9371.0, 9419.7]
    uc_mean = 9421.92
    ac_list = [9368.5, 9370.5, 9389.2, 9367.7, 9406.2, 9395.7, 9366.5, 9370.3, 9363.8, 9254.45294117647]
    ac_mean = 9365.285294117648

    base_100_list = [9368.8, 9264.040449438202, 9379.3, 9360.9, 9368.2, 9375.9, 9375.2, 9247.440449438202, 9371.9, \
    9393.9, 9367.9, 9359.0, 9396.3, 9358.6, 9357.6, 9384.1, 9365.8, 9135.080898876404, 9348.8, 9370.0, 9382.2, \
    9246.840449438203, 9372.4, 9349.4, 9265.140449438202, 9256.840449438203, 9369.1, 9415.4, 9352.2, 9379.1, \
    9385.7, 9396.0, 9369.2, 9375.9, 9355.4, 9368.8, 9243.440449438202, 9365.4, 9372.5, 9360.9, 9370.4, 9401.3, \
    9257.840449438203, 9392.8, 9358.7, 9408.2, 9360.9, 9370.9, 9356.3, 9390.3, 9343.1, 9385.0, 9398.3, 9275.440449438202, \
    9368.2, 9378.8, 9383.2, 9392.7, 9370.0, 9263.540449438202, 9360.6, 9382.3, 9349.6, 9386.0, 9339.8, 9368.6, 9381.6, \
    9378.4, 9366.3, 9377.1, 9337.5, 9402.6, 9369.7, 9366.0, 9391.9, 9365.2, 9363.4, 9256.040449438202, 9374.3, 9376.4, \
    9168.180898876404, 9339.2, 9403.1, 9383.9, 9366.8, 9384.8, 9372.5, 9371.7, 9352.5, 9367.1, 9368.4, 9372.6, 9354.6, \
    9250.640449438202, 9371.3, 9409.4, 9365.1, 9335.3, 9373.0, 9349.8]
    base_100_mean = 9355.09806741573
    uc_100_list = [9389.4, 9424.5, 9421.9, 9425.6, 9417.4, 9430.6, 9402.0, 9395.5, 9433.9, 9442.2, 9381.8, \
    9407.1, 9390.6, 9427.9, 9426.6, 9428.1, 9464.4, 9469.6, 9433.2, 9375.9, 9396.2, 9426.1, 9443.7, 9399.0, 9383.3, \
    9391.1, 9462.3, 9400.5, 9411.2, 9443.4, 9450.4, 9422.1, 9408.3, 9464.1, 9411.0, 9448.5, 9402.9, 9407.0, 9456.9, 9397.1, \
    9433.4, 9447.7, 9444.3, 9400.2, 9379.6, 9404.2, 9422.7, 9412.2, 9389.1, 9463.9, 9433.8, 9438.3, 9423.2, 9408.0, 9445.0, \
    9496.2, 9402.5, 9434.7, 9421.2, 9415.0, 9398.4, 9446.7, 9383.7, 9417.3, 9438.0, 9411.9, 9474.8, 9410.1, 9445.9, \
    9401.8, 9415.4, 9434.3, 9416.5, 9401.4, 9421.4, 9421.5, 9449.2, 9421.8, 9434.9, 9395.2, 9414.0, 9427.3, 9402.8, \
    9398.9, 9397.0, 9415.0, 9453.2, 9396.0, 9416.6, 9378.7, 9398.7, 9488.4, 9421.6, 9419.2, 9431.0, 9379.4, 9420.3, 9421.2, 9412.9, 9415.0]
    uc_100_mean = 9420.759000000002
    ac_100_list = [9370.9, 9369.6, 9397.2, 9381.2, 9369.2, 9379.0, 9386.5, 9355.5, 9407.4, 9399.2, 9427.1, 9392.0, 9382.2, \
    9377.4, 9387.1, 9371.0, 9394.3, 9355.7, 9380.6, 9366.5, 9392.5, 9382.3, 9364.6, 9376.3, 9378.0, 9386.2, 9366.7, 9373.3, \
    9268.95294117647, 9367.9, 9379.4, 9381.0, 9249.85294117647, 9412.6, 9377.0, 9379.0, 9391.4, 9368.0, 9247.75294117647, 9385.6, \
    9277.75294117647, 9379.1, 9371.5, 9264.45294117647, 9388.9, 9272.552941176471, 9242.85294117647, 9162.60588235294, 9366.1, \
    9383.0, 9250.85294117647, 9394.6, 9269.75294117647, 9419.6, 9393.3, 9378.0, 9364.9, 9443.0, 9362.9, 9399.6, 9396.4, 9376.7, 9374.0, \
    9418.4, 9392.8, 9364.0, 9382.0, 9355.3, 9401.1, 9382.2, 9395.9, 9393.4, 9253.45294117647, 9379.7, 9385.2, 9257.35294117647, 9369.1, \
    9373.7, 9389.4, 9371.9, 9421.7, 9389.7, 9363.0, 9253.25294117647, 9365.1, 9372.7, 9369.3, 9403.1, 9382.4, 9365.1, 9416.5, 9404.2, \
    9369.0, 9255.75294117647, 9357.6, 9408.0, 9370.1, 9404.2, 9368.1, 9395.6]
    ac_100_mean = 9365.096941176467
    #
    #
    # # Make a data frame
    # df=pd.DataFrame({'x': range(1,101), 'All stations': base_100_list, 'Ignore Utrecht Centraal': uc_100_list, 'Ignore Amsterdam Centraal': ac_100_list})
    #
    # # style
    # plt.style.use('seaborn-darkgrid')
    #
    # # create a color palette
    # palette = plt.get_cmap('Set1')
    #
    # # multiple line plot
    # num=0
    # for column in df.drop('x', axis=1):
    #     num+=1
    #     plt.plot(df['x'], df[column], marker='', color=palette(num), linewidth=1, alpha=0.9, label=column)
    #
    # # Add legend
    # plt.legend()
    #
    # # Add titles
    # plt.title("Closer interval inspection", loc='left', fontsize=12, fontweight=0)
    # plt.xlabel("Times")
    # plt.ylabel("Score")
    # plt.show()


    D = {'All Stations':base_mean, "Ignore Utrecht": uc_mean, "Ignore Amsterdam":ac_mean}
    plt.title("Mean Scores")
    plt.ylabel("Score")
    plt.bar(range(len(D)), list(D.values()), align='center')
    plt.xticks(range(len(D)), list(D.keys()))
    plt.ylim(ymin=9000,ymax=9600)
    plt.show()


plot_ignore_station_scores()
